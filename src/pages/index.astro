---
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import { SITE, HOME } from "@consts";
import ArrowCard from "@components/ArrowCard.astro";
import Link from "@components/Link.astro";
import { getCollection } from "astro:content";

// ▼▼▼ 全てのブログ記事を取得（スライスしない）▼▼▼
const allBlogPosts = (await getCollection("blog"))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

// 最新の投稿用に記事をスライス
const recentPosts = allBlogPosts.slice(0, SITE.NUM_POSTS_ON_HOMEPAGE);

// ▼▼▼ 「python」タグを持つ記事だけを抽出 ▼▼▼
const pythonPosts = allBlogPosts.filter(post =>
  post.data.tags?.includes("Python")
);

// ▼▼▼ 「データサイエンスの数学」タグを持つ記事だけを抽出 ▼▼▼
const mathPosts = allBlogPosts.filter(post =>
  post.data.tags?.includes("データサイエンスの数学")
);

// タグ関連のロジック（変更なし）
const allTags = new Set<string>();
allBlogPosts.forEach(post => {
  if (Array.isArray(post.data.tags)) {
    post.data.tags.forEach(tag => allTags.add(tag));
  }
});
const sortedTags = Array.from(allTags).sort((a, b) =>
  a.localeCompare(b, 'ja', { sensitivity: 'base' })
);
---

<Layout title={HOME.TITLE} description={HOME.DESCRIPTION}>
  <Container>
    <aside class="space-y-16" data-pagefind-ignore>

      {/* 自己紹介セクション */}
      <section class="animate">
        <article class="space-y-4">
          <h1 class="font-semibold text-black dark:text-white">
            ほのにっきだよ
          </h1>
          <p>「ほのにっき」にアクセスいただき、ありがとうございます。</p>
          <p>
            このサイトでは、日々の研究活動で学んだことなどを載せていく予定だよ。
            最新の記事は<Link href="/blog">ブログページ</Link>から見てね。
          </p>
        </article>
      </section>

      {/* Python 記事一覧セクション */}
      <section class="animate space-y-6">
        <div class="flex flex-wrap items-center justify-between gap-y-2">
          <h2 class="font-semibold text-black dark:text-white">
            Python を学ぶ 🐍
          </h2>
          <Link href="/python/">Pythonの記事一覧を見る</Link>
        </div>
        <ul class="not-prose flex flex-col gap-4">
          {pythonPosts.map((post) => (
            <li><ArrowCard entry={post} /></li>
          ))}
        </ul>
      </section>

      {/* データサイエンスの数学セクション */}
      <section class="animate space-y-6">
        <div class="flex flex-wrap items-center justify-between gap-y-2">
          <h2 class="font-semibold text-black dark:text-white">
            データサイエンスの数学を学ぶ 📚
          </h2>
          <Link href="/tags/データサイエンスの数学">
            このシリーズのすべての記事を見る
          </Link>
        </div>
        <ul class="not-prose flex flex-col gap-4">
          {mathPosts.map((post) => (
            <li><ArrowCard entry={post} /></li>
          ))}
        </ul>
      </section>

      {/* 最新の投稿セクション */}
      <section class="animate space-y-6">
        <div class="flex flex-wrap items-center justify-between gap-y-2">
          <h2 class="font-semibold text-black dark:text-white">
            最新の投稿
          </h2>
          <Link href="/blog">すべての投稿を見る</Link>
        </div>
        <ul class="not-prose flex flex-col gap-4">
          {recentPosts.map((post) => (
            <li><ArrowCard entry={post} /></li>
          ))}
        </ul>
      </section>

      {/* タグ一覧セクション */}
      <section class="animate space-y-6">
        <div class="flex flex-wrap items-center justify-between gap-y-2">
          <h2 class="font-semibold text-black dark:text-white">
            記事の分類（タグ）
          </h2>
        </div>
        <div class="not-prose flex flex-wrap gap-2">
          {sortedTags.length > 0 ? (
            sortedTags.map(tag => (
              <Link href={`/tags/${tag}`} class="tag-badge">
                {tag}
              </Link>
            ))
          ) : (
            <p>まだタグがないみたい...</p>
          )}
        </div>
      </section>

    </aside>
  </Container>
</Layout>

<style>
  /* styleタグの中身は変更ありません */
  .tag-badge {
    display: inline-block;
    padding: 0.5rem 1rem;
    background-color: theme('colors.sky.100');
    color: theme('colors.sky.800');
    border-radius: 9999px;
    font-size: 0.9rem;
    font-weight: 600;
    text-decoration: none;
    transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;
    white-space: nowrap;
  }
  :root.dark .tag-badge {
    background-color: theme('colors.neutral.700');
    color: theme('colors.neutral.200');
  }
  .tag-badge:hover {
    background-color: theme('colors.sky.200');
    color: theme('colors.sky.900');
    text-decoration: none;
  }
  :root.dark .tag-badge:hover {
    background-color: theme('colors.neutral.600');
    color: theme('colors.neutral.100');
  }
  .tag-badge a {
    text-decoration: none !important;
  }
</style>
