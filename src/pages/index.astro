---
// サイトに必要な部品やデータを読み込んでいます
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import { SITE, HOME } from "@consts";
import ArrowCard from "@components/ArrowCard.astro";
import Link from "@components/Link.astro"; // すでにインポートされていますね
import { getCollection } from "astro:content";

// 表示するブログ記事のリストを自動で取得しています
const blog = (await getCollection("blog"))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0, SITE.NUM_POSTS_ON_HOMEPAGE);

// ここからタグ関連のデータを取得するロジックを追加
const allPosts = await getCollection("blog"); // 全ての投稿を取得（既に `blog` でフィルター済みですが、タグ抽出のためにもう一度取得）
const allTags = new Set<string>(); // 重複を避けるためにSetを使用

allPosts.forEach(post => {
  if (Array.isArray(post.data.tags)) { // `tags` プロパティが存在し、配列であることを確認
    post.data.tags.forEach(tag => allTags.add(tag));
  }
});

// タグをソート（任意）
const sortedTags = Array.from(allTags).sort((a, b) => a.localeCompare(b, 'ja', { sensitivity: 'base' })); // 日本語でのソートも考慮
---

<Layout title={HOME.TITLE} description={HOME.DESCRIPTION}>
  <Container>
    <aside class="space-y-16" data-pagefind-ignore>

      <section class="animate">
        <article class="space-y-4">
          <h1 class="font-semibold text-black dark:text-white">
            ほのにっきだよ
          </h1>
          <p>
            「ほのにっき」にアクセスいただき、ありがとうございます。
          </p>
          <p>
            このサイトでは、日々の研究活動で学んだことなどを載せていく予定だよ。
            最新の記事は<Link href="/blog">ブログページ</Link>からみてね。
          </p>
          <p>
            2025年6月27日の時点では、内容はwebサイトが機能するかチェックするための仮の文章となっております。
            GPT-o3に作成してもらったので、内容に関しては鵜呑みにしないようご注意ください。
          </p>
          <p>
            2025年6月30日にて、最初のAI未使用の投稿「グロス・ピタエフスキー方程式(GP方程式)で超流動回してみた！」を掲載しました。以降は筆者による投稿を増やしていきますのでどうぞよろしくお願いします！
          </p>
        </article>
      </section>

      {/* 最新の投稿セクション (既存) */}
      <section class="animate space-y-6">
        <div class="flex flex-wrap items-center justify-between gap-y-2">
          <h2 class="font-semibold text-black dark:text-white">
            最新の投稿
          </h2>
          <Link href="/blog">すべての投稿を見る</Link>
        </div>
        <ul class="not-prose flex flex-col gap-4">
          {
            blog.map((post) => (
              <li>
                <ArrowCard entry={post} />
              </li>
            ))
          }
        </ul>
      </section>

      {/* ここに新しいタグ一覧セクションを追加します */}
      <section class="animate space-y-6">
        <div class="flex flex-wrap items-center justify-between gap-y-2">
          <h2 class="font-semibold text-black dark:text-white">
            記事の分類（タグ）
          </h2>
          {/* 必要であれば、すべてのタグ一覧ページへのリンクを追加することも可能 */}
          {/* <Link href="/tags">すべてのタグを見る</Link> */}
        </div>
        <div class="not-prose flex flex-wrap gap-2"> {/* Tailwind の flex-wrap と gap でレイアウト */}
          {sortedTags.length > 0 ? (
            sortedTags.map(tag => (
              <Link href={`/tags/${tag}`} class="tag-badge">
                {tag}
              </Link>
            ))
          ) : (
            <p>まだタグがないみたい...</p>
          )}
        </div>
      </section>

    </aside>
  </Container>
</Layout>

<style>
  /* タグの見た目を調整するCSSを追加 */
  .tag-badge {
    display: inline-block;
    padding: 0.5rem 1rem; /* p-2 px-4 に相当 */
    background-color: theme('colors.sky.100'); /* Tailwindのbg-sky-100に相当 */
    color: theme('colors.sky.800'); /* Tailwindのtext-sky-800に相当 */
    border-radius: 9999px; /* Tailwindのrounded-fullに相当 */
    font-size: 0.9rem; /* text-sm に相当 */
    font-weight: 600; /* font-semibold に相当 */
    text-decoration: none; /* 下線を削除 */
    transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;
    white-space: nowrap; /* タグが改行されないように */
  }

  /* ダークモード対応 */
  :root.dark .tag-badge {
    background-color: theme('colors.neutral.700'); /* bg-neutral-700 に相当 */
    color: theme('colors.neutral.200'); /* text-neutral-200 に相当 */
  }

  .tag-badge:hover {
    background-color: theme('colors.sky.200'); /* hover:bg-sky-200 に相当 */
    color: theme('colors.sky.900'); /* hover:text-sky-900 に相当 */
    text-decoration: none; /* ホバー時も下線を削除 */
  }

  :root.dark .tag-badge:hover {
    background-color: theme('colors.neutral.600'); /* hover:bg-neutral-600 に相当 */
    color: theme('colors.neutral.100'); /* hover:text-neutral-100 に相当 */
  }

  /* Linkコンポーネントが適用される場合、デフォルトの下線を上書き */
  .tag-badge a {
    text-decoration: none !important;
  }
</style>